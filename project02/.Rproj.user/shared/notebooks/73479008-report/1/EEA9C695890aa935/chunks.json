{"chunk_definitions":[{"row":32,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"setup","include":false,"dev":"png"},"document_id":"2927E82D","chunk_id":"csetup_chunk","chunk_label":"setup"},{"row":38,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","code":["#' Ken Deng, s2617343 ","#' Add your own function definitions on this file.","","#' neg_log_lik","#","#' @description Evaluate the negated log-likelihood for model A and B","#' @param beta A vector with the beta parameters","#' @param data A `data.frame` with the same variables as the `filament1` data set.","#' Must have columns `CAD_Weight` and `Actual_Weight`","#' @param model Either \"A\" for a log-linear variance model, or \"B\" for a proportional","#' scaling error model","","neg_log_lik <- function(beta, data, model){","  ","  mu <- beta[1] + beta[2]*data[[\"CAD_Weight\"]]","  ","  # distinguish between the two models to find the particular standard deviation for the betas","  if(model == \"A\") {","    sigma <- sqrt(exp(beta[3] + beta[4]*data[[\"CAD_Weight\"]]))","  }else{","    sigma <- sqrt(exp(beta[3])+exp(beta[4]) * (data[[\"CAD_Weight\"]]^2))","  }","  - sum(dnorm(data[[\"Actual_Weight\"]],","              mean = mu,","              sd=sigma,","              log = TRUE))","  ","}","","#' filament_estimate","#","#' @description Estimate filament models with different variance structure","#' @param data A `data.frame` with the same variables as the `filament1` data set.","#' Must have columns `CAD_Weight` and `Actual_Weight`","#' @param model Either \"A\" for a log-linear variance model, or \"B\" for a proportional","#' scaling error model","#' @return An estimation object suitable for use with [filament1_predict()]","","filament1_estimate <- function(data, model) {","  model <- match.arg(model, c(\"A\", \"B\"))","  if (model == \"A\") {","    beta_start <- c(-0.1, 1.07, -2, 0.05)","  } else {","    beta_start <- c(-0.15, 1.07, -13.5, -6.5)","  }","  opt <- optim(beta_start,","               neg_log_lik,","               data = data,","               model = model,","               hessian = TRUE,","               method = \"Nelder-Mead\",","               control = list(maxit = 5000)","  )","  fit <- list(","    model = model,","    par = opt$par,","    hessian = opt$hessian","  )","  class(fit) <- c(\"filament1_estimate\", \"list\")","  fit # betahat and SEbetahat","}","","#' filament1_aux_EV","#' ","#' @description Evaluate the expectation and variance for model A and B","#' @param beta A vector with the beta parameters","#' @param data A `data.frame` containing the required predictors, including `CAD_Weight`","#' @param model Either \"A\" for a log-linear variance model, or \"B\" for a proportional","#' scaling error model","#' @param Sigma_beta : If not NULL, an estimate of the covariance matrix for","#                 the uncertainty of estimated betas","#' @return A list with four elements:","#     E : E(y|beta,x)","#     V : Var(y|beta,x)","#     VE : Var(E(y|beta,x)|x) or NULL","#     EV : E(Var(y|beta,x)|x) or NULL","","filament1_aux_EV <- function(beta, data, model = c(\"A\", \"B\"),","                             Sigma_beta = NULL) {","  ","  model <- match.arg(model)","  if (model == \"A\") {","    ","    ZE.0 <- model.matrix( ~ 1 + CAD_Weight, data = data) # X","    ZV.0 <- model.matrix( ~ 1 + CAD_Weight, data = data) # X","    ZE = cbind(ZE.0, ZV.0 * 0) # [X, 0]","    ZV = cbind(ZE.0 * 0, ZV.0) # [0, X]","    ","    VE <- EV <- NULL","    if (!is.null(Sigma_beta)) {","      # E(Var(y|beta,x)|x)","      EV <- exp(ZV %*% beta + rowSums(ZV * (ZV %*% Sigma_beta)) / 2)","      # Var(E(y|beta,x)|x)","      VE <- rowSums(ZE * (ZE %*% Sigma_beta))","    }","    out <- list(","      E = ZE %*% beta, # [X, 0] %*% betahat --- muhat_i","      V = exp(ZV %*% beta), # exp([0, X] %*% betahat) --- sigmahat_i residual variance","      VE = VE, ","      EV = EV","    )","  } else { # model B","    ","    ZE.0 <- model.matrix( ~ 1 + CAD_Weight, data = data) # X","    ZV.0 <- model.matrix( ~ 1 + I(CAD_Weight^2), data = data) # X","    ZE = cbind(ZE.0, ZV.0 * 0) ","    ZV = cbind(ZE.0 * 0, ZV.0)","    ","    VE <- EV <- NULL","    if (!is.null(Sigma_beta)) {","      # E(Var(y|beta,x)|x)","      # (pmin: Ignore large Sigma_beta values)","      EV <- ZV %*% exp(beta + pmin(0.5^2, diag(Sigma_beta)) / 2)","      # Var(E(y|beta,x)|x)","      VE <- rowSums(ZE * (ZE %*% Sigma_beta))","    }","    out <- list(","      E = ZE %*% beta,","      V = ZV %*% exp(beta),","      VE = VE,","      EV = EV","    )","  }","  out # hat E() and hat Var(), hat Var() of hat mu for each y_i","}","","","# myfunc1","filament1_predict <- function(data, model, newdata) { # use my func","  ","  # get beta hat","  fit0 <- filament1_estimate(data, model)","  ","  # mean sd, VE for predict newdata","  pred0 <- filament1_aux_EV(fit0$par, newdata, model, Sigma_beta = solve(fit0$hessian))","  ","  # 95% PI","  # hatmu_i hatsigma_i","  mean <- pred0$E","  sd <- sqrt(pred0$V) # sigmahat","  ","  # sd. = sqrt(sd^2 + hatVarhatbeta_1 + x_i^2 hatVarhatbeta_2)","  # sd. = sqrt(sd^2 + VE)","","  sd. <- sqrt(pred0$EV + pred0$VE)","  ","  q <- qt(1 - 0.05 / 2, df = Inf)","  lwr <- mean - q * sd.","  upr <- mean + q * sd.","  ","  # return","  data.frame(","    mean = mean, sd = sd,","    lwr = lwr, upr = upr","  )","}","","# myfunc2","leave1out <- function(data, model){","  n <- nrow(data)","  mean <- numeric(n)","  sd <- numeric(n)","  ","  for (i in 1:n) {","    leave_1_out_data <- data[-i, ]","    ","    fit0 <- filament1_estimate(leave_1_out_data, model)","  ","    pred0 <- filament1_aux_EV(fit0$par, data[i, ], model)","    ","    mean[i] <- pred0$E # meanhat of new data","    ","    sd[i] <- sqrt(pred0$V) # sdhat of error_i","  }","  ","  result <- data.frame(","    mean = mean, sd = sd","  )","  ","  score <- cbind(data, result) %>%","    mutate(","      se = (Actual_Weight - mean)^2, ","      ds = (Actual_Weight - mean)^2 / sd^2 + 2 * log(sd)","    )","  ","  score","}","","# myfunc3","arch_loglike <- function(Y, params){","  -lgamma(Y[1] + 1) - lgamma(Y[2] + 1) - lgamma(params$N - Y[1]  + 1) - lgamma(params$N - Y[2]  + 1) + ","    2 * lgamma(params$N + 1) + (Y[1] + Y[2]) * log(params$Phi) + (2 * params$N - Y[1] - Y[2]) * log(1 - params$Phi)","}","","","","","","","","","","","","","",""],"eval":true,"echo":false,"results":"hide","label":"unnamed-chunk-98","dev":"png"},"document_id":"2927E82D","chunk_id":"c28ymbog7w9ml","chunk_label":"unnamed-chunk-1"},{"row":48,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-99","dev":"png"},"document_id":"2927E82D","chunk_id":"c2eebn96hj5ug","chunk_label":"unnamed-chunk-2"},{"row":73,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-100","dev":"png"},"document_id":"2927E82D","chunk_id":"cenrccvp3ge52","chunk_label":"unnamed-chunk-3"},{"row":81,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","fig.width":6,"fig.height":4,"fig.align":"center","label":"unnamed-chunk-101","dev":"png"},"document_id":"2927E82D","chunk_id":"c3m7wl0eed6o4","chunk_label":"unnamed-chunk-4"},{"row":89,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","fig.width":6,"fig.height":4,"fig.align":"center","label":"unnamed-chunk-102","dev":"png"},"document_id":"2927E82D","chunk_id":"c9wmo4c3ct3cu","chunk_label":"unnamed-chunk-5"},{"row":106,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-103","dev":"png"},"document_id":"2927E82D","chunk_id":"c3i30zhw6dbbl","chunk_label":"unnamed-chunk-6"},{"row":115,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-104","dev":"png"},"document_id":"2927E82D","chunk_id":"c31ydxul8iesw","chunk_label":"unnamed-chunk-7"},{"row":123,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","fig.width":6,"fig.height":4,"fig.align":"center","label":"unnamed-chunk-105","dev":"png"},"document_id":"2927E82D","chunk_id":"c35sh97wuv41o","chunk_label":"unnamed-chunk-8"},{"row":132,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","fig.width":6,"fig.height":4,"fig.align":"center","label":"unnamed-chunk-106","dev":"png"},"document_id":"2927E82D","chunk_id":"cwm3f72upxa2m","chunk_label":"unnamed-chunk-9"},{"row":173,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-107","dev":"png"},"document_id":"2927E82D","chunk_id":"cam7914f51ihx","chunk_label":"unnamed-chunk-10"},{"row":199,"row_count":1,"visible":true,"expansion_state":0,"options":{"engine":"r","label":"unnamed-chunk-108","dev":"png"},"document_id":"2927E82D","chunk_id":"cfnf7z0j2b9kx","chunk_label":"unnamed-chunk-11"}],"doc_write_time":1711915147,"working_dir":null,"default_chunk_options":{"echo":true,"eval":true},"chunk_rendered_width":700}